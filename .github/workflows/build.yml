name: build
on: [ push, pull_request ]

jobs:
  build:
    strategy:
      matrix:
        java: [ 21 ]
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: Build
        run: ./gradlew build
      - name: Capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: Artifacts
          path: build/libs/
      - name: Release
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-featured: true
          modrinth-unfeature-mode: intersection
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-type: release